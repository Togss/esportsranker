# Generated by Django 5.2.7 on 2025-10-17 14:29

import django.db.models.constraints
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('competitions', '0009_alter_stage_stage_type'),
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='series',
            name='unique_series_per_stage',
        ),
        migrations.RemoveConstraint(
            model_name='series',
            name='teams_must_be_different',
        ),
        migrations.RemoveConstraint(
            model_name='series',
            name='valid_best_of_value',
        ),
        migrations.RemoveIndex(
            model_name='series',
            name='competition_stage_i_14b3bc_idx',
        ),
        migrations.RemoveIndex(
            model_name='series',
            name='competition_team1_i_f001f8_idx',
        ),
        migrations.RenameField(
            model_name='series',
            old_name='stage',
            new_name='stage_type',
        ),
        migrations.AddField(
            model_name='series',
            name='tournament',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='series', to='competitions.tournament'),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='series',
            index=models.Index(fields=['tournament'], name='competition_tournam_79b063_idx'),
        ),
        migrations.AddIndex(
            model_name='series',
            index=models.Index(fields=['stage_type'], name='competition_stage_t_0fe25e_idx'),
        ),
        migrations.AddConstraint(
            model_name='series',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('stage_type', 'team1', 'team2'), name='unique_series_per_stage_teams'),
        ),
        migrations.AddConstraint(
            model_name='series',
            constraint=models.CheckConstraint(condition=models.Q(('team1', models.F('team2')), _negated=True), name='teams_must_be_different_in_series'),
        ),
    ]
