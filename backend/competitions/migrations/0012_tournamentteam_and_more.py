# Generated by Django 5.2.7 on 2025-10-19 12:23

import competitions.models
import django.db.models.constraints
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('competitions', '0011_alter_tournament_region'),
        ('heroes', '0003_remove_hero_heroes_hero_hero_cl_345489_idx_and_more'),
        ('teams', '0003_alter_team_logo'),
    ]

    operations = [
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, choices=[('INVITED', 'Invited'), ('QUALIFIED', 'Qualified'), ('FRANCHISE', 'Franchise')], max_length=12)),
                ('group', models.CharField(blank=True, help_text='e.g., Group A', max_length=16)),
                ('notes', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['seed', 'team__short_name'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='series',
            name='unique_series_per_stage_teams',
        ),
        migrations.RemoveIndex(
            model_name='series',
            name='competition_stage_t_0fe25e_idx',
        ),
        migrations.RenameField(
            model_name='series',
            old_name='stage_type',
            new_name='stage',
        ),
        migrations.RenameField(
            model_name='teamgamestat',
            old_name='turret_kills',
            new_name='turret_destroyed',
        ),
        migrations.AlterUniqueTogether(
            name='teamgamestat',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='playergamestat',
            name='gpm',
        ),
        migrations.RemoveField(
            model_name='playergamestat',
            name='is_starter',
        ),
        migrations.AddField(
            model_name='game',
            name='result_type',
            field=models.CharField(choices=[('NORMAL', 'Normal Win'), ('FORFEIT_TEAM1', 'Forfeit - Team 1 Wins'), ('FORFEIT_TEAM2', 'Forfeit - Team 2 Wins'), ('NO_CONTEST', 'No Contest / Cancelled')], default='NORMAL', max_length=20),
        ),
        migrations.AddField(
            model_name='stage',
            name='name',
            field=models.CharField(default=1, max_length=255, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='stage',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='teamgamestat',
            name='game_win',
            field=models.BooleanField(default=False, help_text='Indicates if the team won the game'),
        ),
        migrations.AlterField(
            model_name='playergamestat',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='heroes.hero'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to=competitions.models.tournament_logo_upload_to),
        ),
        migrations.AddIndex(
            model_name='series',
            index=models.Index(fields=['stage'], name='competition_stage_i_14b3bc_idx'),
        ),
        migrations.AddConstraint(
            model_name='series',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('stage', 'team1', 'team2'), name='unique_series_per_stage_teams'),
        ),
        migrations.AddField(
            model_name='tournamentteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_entries', to='teams.team'),
        ),
        migrations.AddField(
            model_name='tournamentteam',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_teams', to='competitions.tournament'),
        ),
        migrations.AddConstraint(
            model_name='tournamentteam',
            constraint=models.UniqueConstraint(fields=('tournament', 'team'), name='unique_tournament_team'),
        ),
        # 1) COPY existing links from the old auto M2M table into the new through table.
        migrations.RunSQL(
            sql="""
                DO $$
                BEGIN
                    IF EXISTS (
                        SELECT 1 FROM information_schema.tables
                        WHERE table_name = 'competitions_tournament_teams'
                    ) THEN
                        INSERT INTO competitions_tournamentteam (tournament_id, team_id)
                        SELECT tournament_id, team_id
                        FROM competitions_tournament_teams
                        ON CONFLICT DO NOTHING;
                    END IF;
                END $$;
            """,
            reverse_sql="DELETE FROM competitions_tournamentteam;",
        ),

        # 2) REMOVE the old auto M2M field
        migrations.RemoveField(
            model_name='tournament',
            name='teams',
        ),

        # 3) RE-ADD the M2M using the through model
        migrations.AddField(
            model_name='tournament',
            name='teams',
            field=models.ManyToManyField(
                to='teams.team',
                through='competitions.tournamentteam',
                related_name='tournaments',
                blank=True,
                help_text='Teams participating in the tournament',
            ),
        ),
            ]
